@page "/supervisors/create"
@page "/supervisors/edit/{id:int}"
@inject SupervisorService SupervisorService
@inject NavigationManager Navigation

<h3>@(isEdit ? "Edit" : "Create") Supervisor</h3>
@* 
<input @bind="supervisor.FirstName" placeholder="First Name" />
<input @bind="supervisor.LastName" placeholder="Last Name" />
<input @bind="supervisor.Email" placeholder="Email" />
<input @bind="supervisor.Phone" placeholder="Phone" />

<button @onclick="SaveSupervisor">Save</button> *@

<div class="container mt-4">
    <div class="card">
        <div class="card-body">
            <form>
@*                 <div class="mb-3">
                    <label for="firstName" class="form-label">First Name</label>
                    <input type="text" id="firstName" class="form-control" @bind="supervisor.FirstName" placeholder="Enter first name" />
                </div> *@

                <div class="mb-3">
                    <label for="fullName" class="form-label">Full Name</label>
                    <input type="text" id="fullName" class="form-control" @bind="supervisor.FullName" placeholder="Enter last name" />
                </div>

                <div class="mb-3">
                    <label for="email" class="form-label">Email</label>
                    <input type="email" id="email" class="form-control" @bind="supervisor.Email" placeholder="Enter email" />
                </div>

                <div class="mb-3">
                    <label for="phone" class="form-label">Phone</label>
                    <input type="tel" id="phone" class="form-control" @bind="supervisor.Phone" placeholder="Enter phone number" />
                </div>

                <button type="button" class="btn btn-secondary ms-2" @onclick="Cancel">Cancel</button>
                <button type="button" class="btn btn-primary" @onclick="SaveSupervisor">Save</button>

            </form>
        </div>
    </div>
</div>

@code {
    private Supervisor supervisor = new();
    private bool isEdit = false;

    [Parameter] public int? Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Id.HasValue)
        {
            isEdit = true;
            supervisor = await SupervisorService.GetSupervisorByIdAsync(Id.Value);
        }
    }

    private async Task SaveSupervisor()
    {
        if (isEdit)
            await SupervisorService.UpdateSupervisorAsync(supervisor);
        else
            await SupervisorService.CreateSupervisorAsync(supervisor);

        Navigation.NavigateTo("/supervisors");
    }

    private void Cancel() => Navigation.NavigateTo("/supervisors");

}
